using System;

namespace MonteCarloPI{
	public class MonteCarloPIEstimation{
	
	private int interval = 0;
	private double circlePoints = 0;
	private double squarePoints = 0;
	private double randomXpoint = 0;
	private double randomYpoint = 0;
	private double PI;
	private double distance = 0;
	
		
	public int Interval{
	
		get{
		 
		   return interval;
		
		}
		
		set{
		  interval = value;
		
		}
	
	}
	
	public double MonteCarloPIestimate(int intrval){
	    var randomvar = new Random();
		
		for(int i = 0; i < intrval ; i++){
			
			randomXpoint = randomvar.Next(-1,1);
			randomYpoint = randomvar.Next(-1,1); 
			
		    distance = randomXpoint * randomXpoint + randomYpoint * randomYpoint;
		    
			if ( distance <= 1){
			
					circlePoints++;
			
			}
			squarePoints++;
		
		   PI = (4*(circlePoints)/(squarePoints));	
           
		}
	    
		return PI;
		
	}
	
	
	}

	public class MonteCarloTest{
	 
		public static void Main(){
			Console.WriteLine("Enter your interval");
			
			MonteCarloPIEstimation mp = new MonteCarloPIEstimation();
			 
			mp.Interval = Convert.ToInt32 (Console.ReadLine());
			
			double Estimate = mp.MonteCarloPIestimate(mp.Interval);
			
			
			Console.WriteLine("PI estimate with {0} intervals is : {1}", mp.Interval, Estimate);
		
		}
	}
}

