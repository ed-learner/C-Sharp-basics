using System;
using System.Collections.Generic;
using System.Linq;

public class CheckParenthesis {
	
	public static int checkBalanced(String check) {
		
		Stack <char>Openingparentheisstack = new Stack<char>();
		int unbalancedpos = -1;
		
		for (int i = 0; i < check.Length; i++) {
			
			char character = check[i];
			
			if (character == '(')
				Openingparentheisstack.Push(character);
			
			else if (character == ')') {
					if (!Openingparentheisstack.Any()) {
						unbalancedpos = check.Length - 1;
						Console.WriteLine("UNBalanced parenthesis in the string {0}", unbalancedpos);
						return unbalancedpos;

					}
					else if (character == ')' && Openingparentheisstack.Pop() != '(' ){
						unbalancedpos = i;
						Console.WriteLine("UNBalanced parenthesis in the string at {0}", unbalancedpos);
						return unbalancedpos;

					}
				
				
			}
		}
		
		
		if (!Openingparentheisstack.Any()) {
			
			unbalancedpos = -1;
			
		}
		
		if (check[check.Length - 1] == '('){
			
			 unbalancedpos = check.Length - 1;
			 return unbalancedpos;
			
		}
		
		 return unbalancedpos;
	}
	
	
}


public class BalancedParenthesisTest{
	 
		public static void Main(){
			
		  CheckParenthesis cp = new CheckParenthesis();
		  int balanceposition = 0;
			
			
		  for (int i = 0; i < 5; i++){
			  
		   Console.WriteLine("Enter your string");
		   string s = Console.ReadLine();
			

		    balanceposition = CheckParenthesis.checkBalanced(s);
			  
			  if (balanceposition == -1){
				  
			      Console.WriteLine("Balanced Paranthesis in the string ");
			  }
			  
			  else
				  
		         Console.WriteLine("First instance of unbalanced parenthesis at poaition :{0} ",balanceposition );
			
		  
		  }
		}
	
	}
	

